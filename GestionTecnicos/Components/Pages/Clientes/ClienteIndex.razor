@page "/Cliente"
@inject ClientesService ClientesService
@rendermode InteractiveServer 

<PageTitle>Registro de Clientes</PageTitle>
<div class="container">
    <div class="shadow-lg">
        <div class="card-header"></div>
    </div>
    <div class="card-body">
        <h5 class="text-center">Consulta de Clientes</h5>
        <div class="row">
            <div class="col-3">
                <InputSelect class="form-select" @bind-Value="@Filtro">
                    <option value="" selected disabled>Seleccione una opción</option>
                    <option value="ClienteId">ClienteId</option>
                    <option value="Nombres">Nombres</option>
                </InputSelect>
            </div>
        </div>
        <div class="col-4">
            <div class="input-group">
                <input class="form-group" @bind="ValorFiltro" placeholder="Buscar"/>
                <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
                <a href="/Cliente/Create" class="btn btn-success">
                    <span class="bi bi-plus-square"></span> Crear
                </a>
            </div>
        </div>
    </div>
    <table class="table table-hover">
        <thead class="table table-striped text-black">
        <th>ClienteId</th>
        <th>Nombres</th>
        <th>Tecnico Encargado</th>
        <th>Editar</th>
        <th>Eliminar</th>
        </thead>
        <tbody>
        @foreach (var Cliente in ListaClientes)
        {
            <tr>
                <td>@Cliente.ClienteId</td>
                <td>@Cliente.Nombres</td>
                <td>@Cliente.Tecnico.Nombres</td>
                <td class="text-center">
                    <a class="btn btn-outline-primary bi bi-pencil-square" href="/Cliente/Edit/@Cliente.ClienteId"></a>
                </td>
                <td><a class="btn btn-outline-danger bi bi-trash" href="/Cliente/Delete/@Cliente.ClienteId"></a></td>
            </tr>
        }
        </tbody>
    </table>
</div>

@code
{
    public List<Clientes> ListaClientes { get; set; } = new List<Clientes>();
    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;
    
    protected override async Task OnInitializedAsync()
    {
        ListaClientes = await ClientesService.Listar(c => c.ClienteId > 0);
    }
    
    @*Buscar técnicos según el filtro*@
    private async Task Buscar()
    {
        if (Filtro == "ClienteId")
        {
            if (int.TryParse(ValorFiltro, out int clienteId))
            {
                ListaClientes = await ClientesService
                    .Listar(c => c.ClienteId == clienteId);
            }

            
        }
        else if (ValorFiltro.Trim() != "" && Filtro == "Nombres")
        {
            ListaClientes = await ClientesService
                .Listar(t => t.Nombres.ToLower()
                    .Contains(ValorFiltro.ToLower()));
        }
    }
    
}
